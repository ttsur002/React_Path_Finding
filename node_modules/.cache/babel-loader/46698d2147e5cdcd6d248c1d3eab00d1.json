{"ast":null,"code":"var _jsxFileName = \"/Users/takehirotsurumi/WebstormProjects/streamlit/src/Grid.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport './Grid.css';\nimport Node from './Node';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NUMBER_OF_RAW = 35;\nconst NUMBER_OF_COLUMN = 15;\nconst grid = [];\nconst START_NODE_ROW = 0;\nconst START_NODE_COL = 7;\nconst FINISH_NODE_ROW = NUMBER_OF_RAW - 1;\nconst FINISH_NODE_COL = NUMBER_OF_COLUMN - 1 - 7;\n\nconst getInitialGrid = () => {\n  const grid = [];\n\n  for (let row = 0; row < 35; row++) {\n    const currentRow = [];\n\n    for (let col = 0; col < 15; col++) {\n      currentRow.push(createNode(col, row));\n    }\n\n    grid.push(currentRow);\n  }\n\n  return grid;\n};\n\nconst createNode = (col, row) => {\n  return {\n    col,\n    row,\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\n    isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\n    distance: Infinity,\n    isVisited: false,\n    isWall: false,\n    previousNode: null\n  };\n};\n\nconst grids = getInitialGrid();\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props);\n    this.setStart = this.setStart.bind(this);\n    this.setGoal = this.setGoal.bind(this);\n    this.selectOption = this.selectOption.bind(this);\n    this.state = {\n      select: \"-1\",\n      toggleButton: false\n    };\n    this.current_select = {\n      \"0\": this.setStart,\n      \"1\": this.setGoal\n    };\n    this.putWeight = this.putWeight.bind(this);\n  }\n\n  selectOption(e) {\n    if (e.currentTarget.innerText === \"Start\" && !this.state.toggleButton) {\n      this.setState(() => ({\n        select: \"0\",\n        toggleButton: true\n      }));\n      e.currentTarget.setAttribute(\"id\", \"button_on\");\n    } else if (e.currentTarget.innerText === \"Start\" && this.state.toggleButton) {\n      this.setState(() => ({\n        select: \"-1\",\n        toggleButton: false\n      }));\n      e.currentTarget.removeAttribute(\"id\");\n    } else if (e.currentTarget.innerText === \"End\" && !this.state.toggleButton) {\n      this.setState(() => ({\n        select: \"1\",\n        toggleButton: true\n      }));\n      e.currentTarget.setAttribute(\"id\", \"button_on\");\n    } else if (e.currentTarget.innerText === \"End\" && this.state.toggleButton) {\n      this.setState(() => ({\n        select: \"-1\",\n        toggleButton: false\n      }));\n      e.currentTarget.removeAttribute(\"id\");\n    }\n\n    console.log(this.state);\n  }\n\n  putWeight(e) {\n    e.currentTarget.setAttribute(\"id\", \"toggled\");\n  }\n\n  setStart(e) {\n    document.getElementById(\"start\").removeAttribute(\"disabled\");\n    document.getElementById(\"start\").onmousedown = this.putWeight;\n    document.getElementById(\"start\").removeAttribute(\"id\");\n    e.currentTarget.setAttribute(\"id\", \"start\");\n    e.currentTarget.setAttribute(\"disabled\", true);\n  }\n\n  setGoal(e) {\n    document.getElementById(\"end\").removeAttribute(\"disabled\");\n    document.getElementById(\"end\").onmousedown = this.putWeight;\n    document.getElementById(\"end\").removeAttribute(\"id\");\n    e.currentTarget.setAttribute(\"id\", \"end\");\n    e.currentTarget.setAttribute(\"disabled\", true);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: this.selectOption,\n          children: \" Start \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: this.selectOption,\n          children: \" End \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: this.selectOption,\n          children: \" Search \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: grids.map((raw, rawId) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: raw.map((node, nodeId) => {\n              if (rawId === 0 && nodeId === 0) {\n                return /*#__PURE__*/_jsxDEV(Node, {\n                  nodeId: grids[rawId][nodeId].col,\n                  rawId: grids[rawId][nodeId].row,\n                  onClick: this.current_select,\n                  select: this.state.select,\n                  start: grids[rawId][nodeId].isStart,\n                  end: grids[rawId][nodeId].isFinish\n                }, grids[rawId][nodeId].col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 41\n                }, this);\n              } else if (rawId === NUMBER_OF_RAW - 1 && nodeId === NUMBER_OF_COLUMN - 1) {\n                return /*#__PURE__*/_jsxDEV(Node, {\n                  nodeId: grids[rawId][nodeId].col,\n                  rawId: grids[rawId][nodeId].row,\n                  onClick: this.current_select,\n                  select: this.state.select,\n                  start: grids[rawId][nodeId].isStart,\n                  end: grids[rawId][nodeId].isFinish\n                }, grids[rawId][nodeId].col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 41\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(Node, {\n                  nodeId: grids[rawId][nodeId].col,\n                  rawId: grids[rawId][nodeId].row,\n                  onClick: this.current_select,\n                  select: this.state.select,\n                  start: grids[rawId][nodeId].isStart,\n                  end: grids[rawId][nodeId].isFinish\n                }, grids[rawId][nodeId].col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 41\n                }, this);\n              }\n            })\n          }, rawId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Grid;","map":{"version":3,"sources":["/Users/takehirotsurumi/WebstormProjects/streamlit/src/Grid.js"],"names":["React","Component","Node","NUMBER_OF_RAW","NUMBER_OF_COLUMN","grid","START_NODE_ROW","START_NODE_COL","FINISH_NODE_ROW","FINISH_NODE_COL","getInitialGrid","row","currentRow","col","push","createNode","isStart","isFinish","distance","Infinity","isVisited","isWall","previousNode","grids","Grid","constructor","props","setStart","bind","setGoal","selectOption","state","select","toggleButton","current_select","putWeight","e","currentTarget","innerText","setState","setAttribute","removeAttribute","console","log","document","getElementById","onmousedown","render","map","raw","rawId","node","nodeId"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './index.css';\nimport './Grid.css';\nimport Node from './Node';\nconst NUMBER_OF_RAW =35;\nconst NUMBER_OF_COLUMN =15;\nconst grid=[];\nconst START_NODE_ROW=0;\nconst START_NODE_COL=7;\nconst FINISH_NODE_ROW=NUMBER_OF_RAW-1;\nconst FINISH_NODE_COL=NUMBER_OF_COLUMN-1-7;\nconst getInitialGrid = () => {\n    const grid = [];\n    for (let row = 0; row < 35; row++) {\n        const currentRow = [];\n        for (let col = 0; col < 15; col++) {\n            currentRow.push(createNode(col, row));\n        }\n        grid.push(currentRow);\n    }\n    return grid;\n}　\nconst createNode = (col, row) => {\n    return {\n        col,\n        row,\n        isStart: row === START_NODE_ROW && col === START_NODE_COL,\n        isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\n        distance: Infinity,\n        isVisited: false,\n        isWall: false,\n        previousNode: null,\n    };\n};\nconst grids=getInitialGrid();\nclass Grid extends Component{\n    constructor(props) {\n        super(props);\n        this.setStart = this.setStart.bind(this);\n        this.setGoal  = this.setGoal.bind(this);\n        this.selectOption=this.selectOption.bind(this);\n        this.state={select:\"-1\",\n        toggleButton: false};\n        this.current_select={\"0\":this.setStart, \"1\":this.setGoal};\n        this.putWeight=this.putWeight.bind(this)\n\n    }\n    selectOption(e){\n        if(e.currentTarget.innerText===\"Start\"&&!this.state.toggleButton){\n            this.setState(()=>({\n                select: \"0\", toggleButton: true\n            }));\n            e.currentTarget.setAttribute(\"id\", \"button_on\")\n        }\n        else if(e.currentTarget.innerText===\"Start\"&&this.state.toggleButton){\n            this.setState(()=>({\n                select: \"-1\", toggleButton: false\n            }));\n            e.currentTarget.removeAttribute(\"id\")\n        }\n        else if(e.currentTarget.innerText===\"End\"&&!this.state.toggleButton){\n            this.setState(()=>({\n                select: \"1\",toggleButton: true\n            }));\n            e.currentTarget.setAttribute(\"id\", \"button_on\")\n        }\n        else if(e.currentTarget.innerText===\"End\"&&this.state.toggleButton){\n            this.setState(()=>({\n                select: \"-1\",toggleButton: false\n            }));\n            e.currentTarget.removeAttribute(\"id\")\n\n        }\n        console.log(this.state)\n    }\n    putWeight(e){\n        e.currentTarget.setAttribute(\"id\", \"toggled\")\n    }\n    setStart(e){\n        document.getElementById(\"start\").removeAttribute(\"disabled\")\n        document.getElementById(\"start\").onmousedown=this.putWeight\n        document.getElementById(\"start\").removeAttribute(\"id\")\n        e.currentTarget.setAttribute(\"id\", \"start\")\n        e.currentTarget.setAttribute(\"disabled\",true)\n\n    };\n    setGoal(e){\n        document.getElementById(\"end\").removeAttribute(\"disabled\")\n        document.getElementById(\"end\").onmousedown=this.putWeight\n        document.getElementById(\"end\").removeAttribute(\"id\")\n        e.currentTarget.setAttribute(\"id\", \"end\")\n        e.currentTarget.setAttribute(\"disabled\",true)\n    };\n\n    render() {\n        return(\n            <div>\n            <span id=\"bar\">\n            <div className=\"button\" onClick={this.selectOption}> Start </div>\n            <div className=\"button\" onClick={this.selectOption}> End </div>\n                <div className=\"button\" onClick={this.selectOption}> Search </div>\n            </span>\n        <div className='grid'>\n                {grids.map((raw, rawId)=>{\n                    return(\n                        <div key={rawId}>\n                            {raw.map((node,nodeId)=>{\n                                if(rawId===0 && nodeId===0) {\n                                    return (\n                                        <Node key={grids[rawId][nodeId].col} nodeId={grids[rawId][nodeId].col} rawId={grids[rawId][nodeId].row} onClick={this.current_select} select={this.state.select} start={grids[rawId][nodeId].isStart} end={grids[rawId][nodeId].isFinish}></Node>\n                                    )\n                                }else if(rawId===NUMBER_OF_RAW-1 && nodeId===NUMBER_OF_COLUMN-1){\n                                    return(\n                                        <Node key={grids[rawId][nodeId].col} nodeId={grids[rawId][nodeId].col} rawId={grids[rawId][nodeId].row} onClick={this.current_select} select={this.state.select} start={grids[rawId][nodeId].isStart} end={grids[rawId][nodeId].isFinish}></Node>\n\n                                    )\n                                }\n                                else{\n                                    return(\n                                        <Node key={grids[rawId][nodeId].col} nodeId={grids[rawId][nodeId].col} rawId={grids[rawId][nodeId].row} onClick={this.current_select} select={this.state.select} start={grids[rawId][nodeId].isStart} end={grids[rawId][nodeId].isFinish}></Node>\n\n                                    )         }\n                            })}\n                        </div>\n                    )\n                })}\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}