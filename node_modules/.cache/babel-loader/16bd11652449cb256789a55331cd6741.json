{"ast":null,"code":"import React, { Component } from 'react';\n\nclass Search {\n  constructor(grid, col, row) {\n    this.grid = grid;\n    this.col = col;\n    this.row = row;\n  }\n\n  breadth_first_search() {\n    let nodes = document.getElementsByClassName(\"node\");\n\n    for (let i = 0; i < nodes.length; i++) {\n      if (nodes[i].hasAttribute(\"isvisited\")) {\n        nodes[i].removeAttribute(\"isvisited\");\n      }\n    }\n\n    let queue = [];\n    let row = document.getElementById(\"start\").getAttribute(\"rawid\");\n    let col = document.getElementById(\"start\").getAttribute(\"nodeid\");\n    queue.push(this.grid[row][col]);\n\n    while (queue.length !== 0) {\n      let current_node = queue.shift();\n      let current = current_node.col + \" \" + current_node.row;\n      current_node.isVisited = true;\n      document.getElementsByName(current)[0].setAttribute(\"isVisited\", true);\n      let neighbors = current_node.searchNeighbors();\n\n      for (let i = 0; i < neighbors.length; i++) {\n        if (current_node.isFinish) {\n          alert(\"Found\");\n          return;\n        }\n\n        queue.push(neighbors[i]);\n      }\n    }\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/takehirotsurumi/WebstormProjects/streamlit/src/Search.js"],"names":["React","Component","Search","constructor","grid","col","row","breadth_first_search","nodes","document","getElementsByClassName","i","length","hasAttribute","removeAttribute","queue","getElementById","getAttribute","push","current_node","shift","current","isVisited","getElementsByName","setAttribute","neighbors","searchNeighbors","isFinish","alert"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAGA,MAAMC,MAAN,CAAa;AACTC,EAAAA,WAAW,CAACC,IAAD,EAAMC,GAAN,EAAUC,GAAV,EAAe;AACtB,SAAKF,IAAL,GAAUA,IAAV;AACA,SAAKC,GAAL,GAASA,GAAT;AACA,SAAKC,GAAL,GAASA,GAAT;AACH;;AACDC,EAAAA,oBAAoB,GAAE;AAClB,QAAIC,KAAK,GAACC,QAAQ,CAACC,sBAAT,CAAgC,MAAhC,CAAV;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACH,KAAK,CAACI,MAArB,EAA4BD,CAAC,EAA7B,EAAgC;AAC5B,UAAGH,KAAK,CAACG,CAAD,CAAL,CAASE,YAAT,CAAsB,WAAtB,CAAH,EAAsC;AAClCL,QAAAA,KAAK,CAACG,CAAD,CAAL,CAASG,eAAT,CAAyB,WAAzB;AACH;AACJ;;AACD,QAAIC,KAAK,GAAC,EAAV;AACA,QAAIT,GAAG,GAACG,QAAQ,CAACO,cAAT,CAAwB,OAAxB,EAAiCC,YAAjC,CAA8C,OAA9C,CAAR;AACA,QAAIZ,GAAG,GAACI,QAAQ,CAACO,cAAT,CAAwB,OAAxB,EAAiCC,YAAjC,CAA8C,QAA9C,CAAR;AACAF,IAAAA,KAAK,CAACG,IAAN,CAAW,KAAKd,IAAL,CAAUE,GAAV,EAAeD,GAAf,CAAX;;AACA,WAAMU,KAAK,CAACH,MAAN,KAAe,CAArB,EAAuB;AACnB,UAAIO,YAAY,GAACJ,KAAK,CAACK,KAAN,EAAjB;AACA,UAAIC,OAAO,GAACF,YAAY,CAACd,GAAb,GAAiB,GAAjB,GAAqBc,YAAY,CAACb,GAA9C;AACAa,MAAAA,YAAY,CAACG,SAAb,GAAuB,IAAvB;AACAb,MAAAA,QAAQ,CAACc,iBAAT,CAA2BF,OAA3B,EAAoC,CAApC,EAAuCG,YAAvC,CAAoD,WAApD,EAAgE,IAAhE;AACA,UAAIC,SAAS,GAACN,YAAY,CAACO,eAAb,EAAd;;AACA,WAAI,IAAIf,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACc,SAAS,CAACb,MAAxB,EAA+BD,CAAC,EAAhC,EAAoC;AAChC,YAAIQ,YAAY,CAACQ,QAAjB,EAA2B;AACvBC,UAAAA,KAAK,CAAC,OAAD,CAAL;AACA;AACH;;AACDb,QAAAA,KAAK,CAACG,IAAN,CAAWO,SAAS,CAACd,CAAD,CAApB;AACH;AACR;AACA;;AA/BQ;;AAkCb,eAAeT,MAAf","sourcesContent":["import React, {Component} from 'react';\n\n\nclass Search {\n    constructor(grid,col,row) {\n        this.grid=grid;\n        this.col=col;\n        this.row=row;\n    }\n    breadth_first_search(){\n        let nodes=document.getElementsByClassName(\"node\")\n        for (let i=0;i<nodes.length;i++){\n            if(nodes[i].hasAttribute(\"isvisited\")){\n                nodes[i].removeAttribute(\"isvisited\")\n            }\n        }\n        let queue=[]\n        let row=document.getElementById(\"start\").getAttribute(\"rawid\")\n        let col=document.getElementById(\"start\").getAttribute(\"nodeid\")\n        queue.push(this.grid[row][col]);\n        while(queue.length!==0){\n            let current_node=queue.shift();\n            let current=current_node.col+\" \"+current_node.row;\n            current_node.isVisited=true;\n            document.getElementsByName(current)[0].setAttribute(\"isVisited\",true)\n            let neighbors=current_node.searchNeighbors();\n            for(let i=0;i<neighbors.length;i++) {\n                if (current_node.isFinish) {\n                    alert(\"Found\")\n                    return\n                }\n                queue.push(neighbors[i])\n            }\n    }\n    }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}