{"ast":null,"code":"var _jsxFileName = \"/Users/takehirotsurumi/WebstormProjects/streamlit/src/Grid.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport './Grid.css';\nimport Node from './Node';\nimport Search from './Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NUMBER_OF_RAW = 15;\nconst NUMBER_OF_COLUMN = 15;\nconst START_NODE_ROW = 0;\nconst START_NODE_COL = 7;\nconst FINISH_NODE_ROW = NUMBER_OF_RAW - 1;\nconst FINISH_NODE_COL = NUMBER_OF_COLUMN - 1 - 7;\n\nconst getInitialGrid = () => {\n  const grid = [];\n\n  for (let row = 0; row < NUMBER_OF_RAW; row++) {\n    const currentRow = [];\n\n    for (let col = 0; col < NUMBER_OF_COLUMN; col++) {\n      currentRow.push(createNode(row, col));\n    }\n\n    grid.push(currentRow);\n  }\n\n  return grid;\n};\n\nconst createNode = (row, col) => {\n  return {\n    col,\n    row,\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\n    isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\n    distance: Infinity,\n    isVisited: false,\n    isWall: false,\n    previousNode: null,\n    searchNeighbors: function () {\n      let neighbors = [];\n\n      let check = (row, col) => {\n        if (col >= 0 && row >= 0 && col < NUMBER_OF_COLUMN && row < NUMBER_OF_RAW) {\n          if (!grids[row][col].isVisited) {\n            return true;\n          }\n        }\n      };\n\n      if (check(this.row - 1, this.col)) {\n        neighbors.push(grids[this.row - 1][this.col]);\n      }\n\n      if (check(this.row + 1, this.col)) {\n        neighbors.push(grids[this.row + 1][this.col]);\n      }\n\n      if (check(this.row, this.col - 1)) {\n        neighbors.push(grids[this.row][this.col - 1]);\n      }\n\n      if (check(this.row, this.col + 1)) {\n        neighbors.push(grids[this.row][this.col + 1]);\n      }\n\n      return neighbors;\n    }\n  };\n};\n\nconst grids = getInitialGrid();\nconst search = new Search(grids, NUMBER_OF_COLUMN, NUMBER_OF_RAW);\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props);\n    this.setStart = this.setStart.bind(this);\n    this.setGoal = this.setGoal.bind(this);\n    this.selectOption = this.selectOption.bind(this);\n    this.state = {\n      color: \"white\"\n    };\n    this.current_select = {\n      \"0\": this.setStart,\n      \"1\": this.setGoal\n    };\n    this.putWeight = this.putWeight.bind(this);\n  }\n\n  selectOption(e) {\n    /*        if(e.currentTarget.innerText===\"Start\"&&!this.state.toggleButton){\n                this.setState(()=>({\n                    select: \"0\", toggleButton: true\n                }));\n                e.currentTarget.setAttribute(\"id\", \"button_on\")\n            }\n            else if(e.currentTarget.innerText===\"Start\"&&this.state.toggleButton){\n                this.setState(()=>({\n                    select: \"-1\", toggleButton: false\n                }));\n                e.currentTarget.removeAttribute(\"id\")\n            }\n            else if(e.currentTarget.innerText===\"End\"&&!this.state.toggleButton){\n                this.setState(()=>({\n                    select: \"1\",toggleButton: true\n                }));\n                e.currentTarget.setAttribute(\"id\", \"button_on\")\n            }\n            else if(e.currentTarget.innerText===\"End\"&&this.state.toggleButton){\n                this.setState(()=>({\n                    select: \"-1\",toggleButton: false\n                }));\n                e.currentTarget.removeAttribute(\"id\")\n    \n            }*/\n    if (e.currentTarget.innerText === \"Search\") {\n      search.breadth_first_search();\n    }\n  }\n\n  putWeight(e) {\n    e.currentTarget.setAttribute(\"id\", \"toggled\");\n  }\n\n  setStart(e) {\n    document.getElementById(\"start\").removeAttribute(\"disabled\");\n    document.getElementById(\"start\").onmousedown = this.putWeight;\n    document.getElementById(\"start\").removeAttribute(\"id\");\n    e.currentTarget.setAttribute(\"id\", \"start\");\n    e.currentTarget.setAttribute(\"disabled\", true);\n  }\n\n  setGoal(e) {\n    document.getElementById(\"end\").removeAttribute(\"disabled\");\n    document.getElementById(\"end\").onmousedown = this.putWeight;\n    document.getElementById(\"end\").removeAttribute(\"id\");\n    e.currentTarget.setAttribute(\"id\", \"end\");\n    e.currentTarget.setAttribute(\"disabled\", true);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: this.selectOption,\n          children: \" Start \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: this.selectOption,\n          children: \" End \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: this.selectOption,\n          children: \" Search \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: grids.map((raw, rawId) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: raw.map((node, nodeId) => {\n              if (rawId === 0 && nodeId === 0) {\n                return /*#__PURE__*/_jsxDEV(Node, {\n                  nodeId: grids[rawId][nodeId].col,\n                  rawId: grids[rawId][nodeId].row,\n                  onClick: this.current_select,\n                  select: this.state.color,\n                  start: grids[rawId][nodeId].isStart,\n                  end: grids[rawId][nodeId].isFinish,\n                  isVisited: grids[rawId][nodeId].isVisited,\n                  searchNeighbors: grids[rawId][nodeId].searchNeighbors()\n                }, grids[rawId][nodeId].col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 41\n                }, this);\n              } else if (rawId === NUMBER_OF_RAW - 1 && nodeId === NUMBER_OF_COLUMN - 1) {\n                return /*#__PURE__*/_jsxDEV(Node, {\n                  nodeId: grids[rawId][nodeId].col,\n                  rawId: grids[rawId][nodeId].row,\n                  onClick: this.current_select,\n                  select: this.state.color,\n                  start: grids[rawId][nodeId].isStart,\n                  end: grids[rawId][nodeId].isFinish,\n                  isVisited: grids[rawId][nodeId].isVisited,\n                  searchNeighbors: grids[rawId][nodeId].searchNeighbors()\n                }, grids[rawId][nodeId].col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 41\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(Node, {\n                  nodeId: grids[rawId][nodeId].col,\n                  rawId: grids[rawId][nodeId].row,\n                  onClick: this.current_select,\n                  select: this.state.color,\n                  start: grids[rawId][nodeId].isStart,\n                  end: grids[rawId][nodeId].isFinish,\n                  isVisited: grids[rawId][nodeId].isVisited,\n                  searchNeighbors: grids[rawId][nodeId].searchNeighbors()\n                }, grids[rawId][nodeId].col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 41\n                }, this);\n              }\n            })\n          }, rawId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Grid;","map":{"version":3,"sources":["/Users/takehirotsurumi/WebstormProjects/streamlit/src/Grid.js"],"names":["React","Component","Node","Search","NUMBER_OF_RAW","NUMBER_OF_COLUMN","START_NODE_ROW","START_NODE_COL","FINISH_NODE_ROW","FINISH_NODE_COL","getInitialGrid","grid","row","currentRow","col","push","createNode","isStart","isFinish","distance","Infinity","isVisited","isWall","previousNode","searchNeighbors","neighbors","check","grids","search","Grid","constructor","props","setStart","bind","setGoal","selectOption","state","color","current_select","putWeight","e","currentTarget","innerText","breadth_first_search","setAttribute","document","getElementById","removeAttribute","onmousedown","render","map","raw","rawId","node","nodeId"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './index.css';\nimport './Grid.css';\nimport Node from './Node';\nimport Search from './Search'\nconst NUMBER_OF_RAW =15;\nconst NUMBER_OF_COLUMN =15;\nconst START_NODE_ROW=0;\nconst START_NODE_COL=7;\nconst FINISH_NODE_ROW=NUMBER_OF_RAW-1;\nconst FINISH_NODE_COL=NUMBER_OF_COLUMN-1-7;\nconst getInitialGrid = () => {\n    const grid = [];\n    for (let row = 0; row < NUMBER_OF_RAW; row++) {\n        const currentRow = [];\n        for (let col = 0; col < NUMBER_OF_COLUMN; col++) {\n            currentRow.push(createNode(row, col));\n        }\n        grid.push(currentRow);\n    }\n    return grid;\n}　\nconst createNode = (row, col) => {\n    return {\n        col,\n        row,\n        isStart: row === START_NODE_ROW && col === START_NODE_COL,\n        isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\n        distance: Infinity,\n        isVisited: false,\n        isWall: false,\n        previousNode: null,\n        searchNeighbors: function() {\n            let neighbors=[];\n            let check=(row,col)=>{\n                if(col>=0 && row>=0 && col < NUMBER_OF_COLUMN && row<NUMBER_OF_RAW){\n                        if(!grids[row][col].isVisited){\n                            return true\n                        }\n                }\n\n            };\n            if(check(this.row-1,this.col)){\n                neighbors.push(grids[this.row-1][this.col])\n            }\n            if(check(this.row+1,this.col)){\n                neighbors.push(grids[this.row+1][this.col])\n            }\n            if(check(this.row,this.col-1)){\n                neighbors.push(grids[this.row][this.col-1])\n            }\n            if(check(this.row,this.col+1)){\n                neighbors.push(grids[this.row][this.col+1])\n            }\n            return neighbors\n        }\n    };\n};\nconst grids=getInitialGrid();\nconst search = new Search(grids,NUMBER_OF_COLUMN,NUMBER_OF_RAW);\nclass Grid extends Component{\n    constructor(props) {\n        super(props);\n        this.setStart = this.setStart.bind(this);\n        this.setGoal  = this.setGoal.bind(this);\n        this.selectOption=this.selectOption.bind(this);\n        this.state={color : \"white\"};\n        this.current_select={\"0\":this.setStart, \"1\":this.setGoal};\n        this.putWeight=this.putWeight.bind(this)\n\n    }\n    selectOption(e){\n/*        if(e.currentTarget.innerText===\"Start\"&&!this.state.toggleButton){\n            this.setState(()=>({\n                select: \"0\", toggleButton: true\n            }));\n            e.currentTarget.setAttribute(\"id\", \"button_on\")\n        }\n        else if(e.currentTarget.innerText===\"Start\"&&this.state.toggleButton){\n            this.setState(()=>({\n                select: \"-1\", toggleButton: false\n            }));\n            e.currentTarget.removeAttribute(\"id\")\n        }\n        else if(e.currentTarget.innerText===\"End\"&&!this.state.toggleButton){\n            this.setState(()=>({\n                select: \"1\",toggleButton: true\n            }));\n            e.currentTarget.setAttribute(\"id\", \"button_on\")\n        }\n        else if(e.currentTarget.innerText===\"End\"&&this.state.toggleButton){\n            this.setState(()=>({\n                select: \"-1\",toggleButton: false\n            }));\n            e.currentTarget.removeAttribute(\"id\")\n\n        }*/\n        if(e.currentTarget.innerText===\"Search\"){\n            search.breadth_first_search();\n        }\n\n    }\n    putWeight(e){\n        e.currentTarget.setAttribute(\"id\", \"toggled\")\n    }\n    setStart(e){\n        document.getElementById(\"start\").removeAttribute(\"disabled\")\n        document.getElementById(\"start\").onmousedown=this.putWeight\n        document.getElementById(\"start\").removeAttribute(\"id\")\n        e.currentTarget.setAttribute(\"id\", \"start\")\n        e.currentTarget.setAttribute(\"disabled\",true)\n\n    };\n    setGoal(e){\n        document.getElementById(\"end\").removeAttribute(\"disabled\")\n        document.getElementById(\"end\").onmousedown=this.putWeight\n        document.getElementById(\"end\").removeAttribute(\"id\")\n        e.currentTarget.setAttribute(\"id\", \"end\")\n        e.currentTarget.setAttribute(\"disabled\",true)\n    };\n\n    render() {\n        return(\n            <div>\n            <span id=\"bar\">\n            <div className=\"button\" onClick={this.selectOption}> Start </div>\n            <div className=\"button\" onClick={this.selectOption}> End </div>\n                <div className=\"button\" onClick={this.selectOption}> Search </div>\n            </span>\n        <div className='grid'>\n                {grids.map((raw, rawId)=>{\n                    return(\n                        <div key={rawId}>\n                            {raw.map((node,nodeId)=>{\n                                if(rawId===0 && nodeId===0) {\n                                    return (\n                                        <Node key={grids[rawId][nodeId].col} nodeId={grids[rawId][nodeId].col} rawId={grids[rawId][nodeId].row} onClick={this.current_select} select={this.state.color} start={grids[rawId][nodeId].isStart} end={grids[rawId][nodeId].isFinish} isVisited={grids[rawId][nodeId].isVisited} searchNeighbors={grids[rawId][nodeId].searchNeighbors()}></Node>\n                                    )\n                                }else if(rawId===NUMBER_OF_RAW-1 && nodeId===NUMBER_OF_COLUMN-1){\n                                    return(\n                                        <Node key={grids[rawId][nodeId].col} nodeId={grids[rawId][nodeId].col} rawId={grids[rawId][nodeId].row} onClick={this.current_select} select={this.state.color} start={grids[rawId][nodeId].isStart} end={grids[rawId][nodeId].isFinish} isVisited={grids[rawId][nodeId].isVisited} searchNeighbors={grids[rawId][nodeId].searchNeighbors()}></Node>\n\n                                    )\n                                }\n                                else{\n                                    return(\n                                        <Node key={grids[rawId][nodeId].col} nodeId={grids[rawId][nodeId].col} rawId={grids[rawId][nodeId].row} onClick={this.current_select} select={this.state.color} start={grids[rawId][nodeId].isStart} end={grids[rawId][nodeId].isFinish} isVisited={grids[rawId][nodeId].isVisited} searchNeighbors={grids[rawId][nodeId].searchNeighbors()}></Node>\n\n                                    )         }\n                            })}\n                        </div>\n                    )\n                })}\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}