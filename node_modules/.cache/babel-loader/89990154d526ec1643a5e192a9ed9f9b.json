{"ast":null,"code":"import React, { Component } from 'react';\n\nclass Search {\n  constructor(grid, col, row) {\n    this.grid = grid;\n    this.col = col;\n    this.row = row;\n  }\n\n  breadth_first_search() {\n    let row = 8;\n    let col = 0;\n    let queue = [];\n    let Visited = [];\n    let i = 0;\n    queue.push(this.grid[col][row]);\n\n    while (0 !== queue.length) {\n      leet;\n\n      if (neighbors[0].isFinish) {\n        alert(\"found\");\n\n        for (let i = 0; i < this.col; i++) {\n          for (let j = 0; j < this.row; j++) {\n            this.grid[i][j].isVisited = false;\n          }\n        }\n\n        console.log(Visited);\n        return;\n      }\n    }\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/takehirotsurumi/WebstormProjects/streamlit/src/Search.js"],"names":["React","Component","Search","constructor","grid","col","row","breadth_first_search","queue","Visited","i","push","length","leet","neighbors","isFinish","alert","j","isVisited","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAGA,MAAMC,MAAN,CAAa;AACTC,EAAAA,WAAW,CAACC,IAAD,EAAMC,GAAN,EAAUC,GAAV,EAAe;AACtB,SAAKF,IAAL,GAAUA,IAAV;AACA,SAAKC,GAAL,GAASA,GAAT;AACA,SAAKC,GAAL,GAASA,GAAT;AACH;;AACDC,EAAAA,oBAAoB,GAAE;AACtB,QAAID,GAAG,GAAC,CAAR;AACA,QAAID,GAAG,GAAC,CAAR;AACA,QAAIG,KAAK,GAAC,EAAV;AACA,QAAIC,OAAO,GAAC,EAAZ;AACA,QAAIC,CAAC,GAAC,CAAN;AACAF,IAAAA,KAAK,CAACG,IAAN,CAAW,KAAKP,IAAL,CAAUC,GAAV,EAAeC,GAAf,CAAX;;AACA,WAAM,MAAME,KAAK,CAACI,MAAlB,EAA0B;AACtBC,MAAAA,IAAI;;AACA,UAAIC,SAAS,CAAC,CAAD,CAAT,CAAaC,QAAjB,EAA2B;AACvBC,QAAAA,KAAK,CAAC,OAAD,CAAL;;AACA,aAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,GAAzB,EAA8BK,CAAC,EAA/B,EAAmC;AAC/B,eAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKX,GAAzB,EAA8BW,CAAC,EAA/B,EAAmC;AAC/B,iBAAKb,IAAL,CAAUM,CAAV,EAAaO,CAAb,EAAgBC,SAAhB,GAA4B,KAA5B;AACH;AACJ;;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACA;AACH;AACJ;AACJ;;AA1BQ;;AA6Bb,eAAeP,MAAf","sourcesContent":["import React, {Component} from 'react';\n\n\nclass Search {\n    constructor(grid,col,row) {\n        this.grid=grid;\n        this.col=col;\n        this.row=row;\n    }\n    breadth_first_search(){\n    let row=8;\n    let col=0;\n    let queue=[];\n    let Visited=[];\n    let i=0\n    queue.push(this.grid[col][row])\n    while(0 !== queue.length) {\n        leet\n            if (neighbors[0].isFinish) {\n                alert(\"found\")\n                for (let i = 0; i < this.col; i++) {\n                    for (let j = 0; j < this.row; j++) {\n                        this.grid[i][j].isVisited = false\n                    }\n                }\n                console.log(Visited)\n                return\n            }\n        }\n    }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}